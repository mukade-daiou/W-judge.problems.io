{"submission_id": "52", "source": "#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\n\r\nconst int INF = (int)1e9;\r\n\r\nint solve(const int low, const std::vector<int>& ls)\r\n{\r\n\tconst int n = ls.size();\r\n\tstd::vector<int> dp(n + 1);\r\n\tdp[0] = low;\r\n\r\n\tfor(int position = 0; position < n; position++) {\r\n\r\n\t\tint piece_length = 0;\r\n\t\tint& value = dp[position + 1];\r\n\r\n\t\tvalue = INF;\r\n\r\n\t\tfor(int piece_left = position; piece_left >= 0; piece_left--) {\r\n\r\n\t\t\tpiece_length += ls[piece_left];\r\n\r\n\t\t\tif(position == n - 1 && piece_left == 0) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(piece_length >= low) {\r\n\t\t\t\tconst int high = std::max(piece_length, dp[piece_left]);\r\n\t\t\t\tvalue = std::min(value, high);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn dp[n] - low;\r\n}\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\tstd::vector<int> ls;\r\n\r\n\tstd::cin >> n;\r\n\tls.resize(n);\r\n\tfor(int i = 0; i < n; i++) {\r\n\t\tstd::cin >> ls[i];\r\n\t}\r\n\r\n\tint answer = INF;\r\n\r\n\tfor(int left = 0; left < n; left++) {\r\n\t\tint total_length = 0;\r\n\t\tfor(int right = left; right < n; right++) {\r\n\t\t\ttotal_length += ls[right];\r\n\t\t\tint temp = solve(total_length, ls);\r\n\t\t\tanswer = std::min(answer, temp);\r\n\t\t}\r\n\t}\r\n\r\n\tstd::cout << answer << std::endl;\r\n\r\n\treturn 0;\r\n}", "problem_id": "8", "problem_title": "JOI\u4e88\u9078 2017/2018 Q4", "datetime": "2018-07-14 12:52:46", "lang": "C++", "user": "leaf2326", "sample_io": ["Accepted", "Accepted", "Accepted"], "testcase": [{"result": "Accepted", "max_score": "10", "io_result": ["Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted"]}, {"result": "Accepted", "max_score": "27", "io_result": ["Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted"]}, {"result": "Accepted", "max_score": "63", "io_result": ["Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted"]}], "result": "Accepted", "score": "100", "max_score": "100"}