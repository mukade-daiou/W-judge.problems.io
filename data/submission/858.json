{"submission_id": "858", "source": "# include <iostream>\r\n# include <algorithm>\r\n#include <array>\r\n# include <cassert>\r\n#include <cctype>\r\n#include <climits>\r\n#include <numeric>\r\n# include <vector>\r\n# include <string>\r\n# include <set>\r\n# include <map>\r\n# include <cmath>\r\n# include <iomanip>\r\n# include <functional>\r\n# include <tuple>\r\n# include <utility>\r\n# include <stack>\r\n# include <queue>\r\n# include <list>\r\n# include <bitset>\r\n# include <complex>\r\n# include <chrono>\r\n# include <random>\r\n# include <limits.h>\r\n# include <unordered_map>\r\n# include <unordered_set>\r\n# include <deque>\r\n# include <cstdio>\r\n# include <cstring>\r\n#include <stdio.h>\r\n#include<time.h>\r\n#include <stdlib.h>\r\n#include <cstdint>\r\n#include <cfenv>\r\n\r\n//#include <bits/stdc++.h>\r\nusing namespace std;\r\nusing LL = long long;\r\nusing ULL = unsigned long long;\r\nlong long MOD = 1000000000 + 7;\r\nconstexpr long long INF = numeric_limits<LL>::max();\r\nconst double PI = acos(-1);\r\n#define fir first\r\n#define sec second\r\n#define thi third\r\n#define debug(x) cerr<<#x<<\": \"<<x<<'\\n'\r\ntypedef pair<LL, LL> Pll;\r\ntypedef pair<LL, pair<LL, LL>> Ppll;\r\ntypedef pair<LL, pair<LL, bitset<100001>>> Pbll;\r\ntypedef pair<LL, pair<LL, vector<LL>>> Pvll;\r\ntypedef pair<LL, LL> Vec2;\r\nstruct Tll { LL first, second, third; };\r\nstruct Fll { LL first, second, third, fourd; };\r\ntypedef pair<LL, Tll> Ptll;\r\n#define rep(i,rept) for(LL i=0;i<rept;i++)\r\n#define Mfor(i,mf) for(LL i=mf-1;i>=0;i--)\r\nLL h, w, n, m, k, t, s, q, last, cnt, sum, ans, dp[11000][11000];\r\nTll a[101000], b[110000];\r\nstring str, ss=\"caesar\";\r\nbool f;\r\nchar c;\r\nint di[4][2] = { { 0,1 },{ 1,0 },{0,-1},{-1,0} };\r\nstruct Edge { LL to, cost; };\r\nvector<LL>vec;\r\nvector<Pll>v[200000];\r\nmap<Pll, LL>ma;\r\nset<LL>st;\r\nvoid YN(bool f) {\r\n\tif (f)\r\n\t\tcout << \"YES\" << endl;\r\n\telse\r\n\t\tcout << \"NO\" << endl;\r\n}\r\nvoid yn(bool f) {\r\n\tif (f)\r\n\t\tcout << \"Yes\" << endl;\r\n\telse\r\n\t\tcout << \"No\" << endl;\r\n}\r\nstruct Seg {\r\n\tLL n;\r\n\tvector<LL>node, lazy;\r\n\tSeg(LL n_) {\r\n\t\tn = 1; while (n < n_)n *= 2;\r\n\t\tnode.resize(n * 2 - 1);\r\n\t\tlazy.resize(n * 2 - 1);\r\n\t\trep(i, n)node[n + i - 1] = 0;\r\n\t\tMfor(i, n - 2)node[i] = min(node[i * 2 + 1], node[i * 2 + 2]);\r\n\t\t//\u533a\u9593\u6700\u5c0f\u306a\u3069\u306e\u6642\r\n\t\trep(i, n * 2 - 1)lazy[i] = -1;\r\n\t}\r\n\t//\u533a\u9593\u306e\u6700\u5c0f\u306e\u9045\u5ef6\r\n\tvoid ceval(LL k, LL l, LL r) {\r\n\t\tif (lazy[k] != -1) {\r\n\t\t\tnode[k] = lazy[k];\r\n\t\t\tif (r - l >= 1) {\r\n\t\t\t\tlazy[k * 2 + 1] = lazy[k];\r\n\t\t\t\tlazy[k * 2 + 2] = lazy[k];\r\n\t\t\t}\r\n\t\t\tlazy[k] = -1;\r\n\t\t}\r\n\t}\r\n\tvoid update(LL i, LL x, LL a, LL b, LL l, LL r) {\r\n\t\tceval(i, a, b);\r\n\t\tif (b < l || r < a)return;\r\n\t\tif (l <= a && b <= r) {\r\n\t\t\tlazy[i] = x;\r\n\t\t\tceval(i, a, b);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tupdate(i * 2 + 1, x, a, (a + b) / 2, l, r);\r\n\t\t\tupdate(i * 2 + 2, x, (a + b + 1) / 2, b, l, r);\r\n\t\t\tnode[i] = min(node[i * 2 + 1], node[i * 2 + 2]);\r\n\t\t}\r\n\t}\r\n\tLL find(LL i, LL a, LL b, LL l, LL r) {\r\n\t\tceval(i, a, b);\r\n\t\tif (b< l || r < a)return INF;\r\n\t\tif (l <= a && b <= r)return node[i];\r\n\t\treturn min(find(i * 2 + 1, a, (a + b) / 2, l, r), find(i * 2 + 2, (a + b + 1) / 2, b, l, r));\r\n\t}\r\n\t\r\n\r\n};\r\n\r\nmap<LL,LL> zip;\r\nLL unzip[1000000];\r\n\r\nint compress(vector<LL> &x) {\r\n\tsort(x.begin(), x.end());\r\n\tx.erase(unique(x.begin(), x.end()), x.end());\r\n\tfor (int i = 0; i < x.size(); i++) {\r\n\t\tzip[x[i]] = i;\r\n\t\tunzip[i] = x[i];\r\n\t}\r\n\treturn x.size();\r\n}\r\nSeg seg(10);\r\nint main() {\r\n\tcin >> n >> m;\r\n\trep(i, m) {\r\n\t\tLL x, y, z,w;\r\n\t\tcin >> x;\r\n\t\tif (x == 1) {\r\n\t\t\tcin >> y >> z >> w;\r\n\t\t\tz--;\r\n\t\t\ta[i] = Tll{ y, z, w };\r\n\t\t\tvec.push_back(y);\r\n\t\t\tvec.push_back(z);\r\n\t\t}\r\n\t\tif (x == 2) {\r\n\t\t\tcin >> y;\r\n\t\t\ta[i] = Tll{ y,INF,0 };\r\n\t\t\tvec.push_back(y);\r\n\t\t}\r\n\t}\r\n\tsort(vec.begin(), vec.end());\r\n\tcompress(vec);\r\n\trep(i, m) {\r\n\t\tif (a[i].sec == INF) {\r\n\t\t\tcout << seg.find(0, 0, seg.n - 1, zip[a[i].fir], zip[a[i].fir]) << endl;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tseg.update(0, a[i].third, 0, seg.n - 1, zip[a[i].fir], zip[a[i].sec]);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "problem_id": "70", "problem_title": "Range Set Query", "datetime": "2018-08-06 15:00:20", "lang": "C++", "user": "akusyounin", "sample_io": ["Accepted"], "testcase": [{"result": "WrongAnswer", "max_score": "40", "io_result": ["WrongAnswer", "WrongAnswer", "WrongAnswer", "WrongAnswer", "WrongAnswer"]}, {"result": "WrongAnswer", "max_score": "60", "io_result": ["WrongAnswer", "WrongAnswer", "WrongAnswer", "WrongAnswer", "WrongAnswer"]}], "result": "WrongAnswer", "score": "0", "max_score": "100"}