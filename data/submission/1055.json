{"submission_id": "1055", "source": "#include<iostream>\r\n#include<algorithm>\r\n#include<vector>\r\n#include<queue>\r\n#define PP std::pair<int,int>\r\nint N, H, W;\r\nint SH, SW;\r\nint meteor[1010][1010];\r\nint res[1010][1010];\r\nint dx[] = { 1,0,-1,0 };\r\nint dy[] = { 0,1,0,-1 };\r\n\r\nvoid fall(int h, int w, int A, int T) {\r\n\tint range = 0;\r\n\twhile (range <= A) {\r\n\t\tfor (int i = 0; i <= range; i++) {\r\n\t\t\tint ha = range - i;\r\n\t\t\tif (1 <= h + ha&&h + ha <= H && 1 <= w + i&&w + i <= W)meteor[h + ha][w + i] = std::min(T, meteor[h + ha][w + i]);\r\n\t\t\tif (1 <= h - ha&&h - ha <= H && 1 <= w + i&&w + i <= W)meteor[h - ha][w + i] = std::min(T, meteor[h - ha][w + i]);\r\n\t\t\tif (1 <= h + ha&&h + ha <= H && 1 <= w - i&&w - i <= W)meteor[h + ha][w - i] = std::min(T, meteor[h + ha][w - i]);\r\n\t\t\tif (1 <= h - ha&&h - ha <= H && 1 <= w - i&&w - i <= W)meteor[h - ha][w - i] = std::min(T, meteor[h - ha][w - i]);\r\n\t\t}\r\n\t\trange++;\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tstd::cin >> N >> H >> W >> SH >> SW;\r\n\tfor (int i = 1; i <= H; i++) {\r\n\t\tfor (int j = 1; j <= W; j++) {\r\n\t\t\tmeteor[i][j] = 1 << 30;\r\n\t\t\tres[i][j] = 1 << 30;\r\n\t\t}\r\n\t}\r\n\tfor (int i = 0; i<N; i++) {\r\n\t\tint h, w, A, T;\r\n\t\tstd::cin >> h >> w >> A >> T;\r\n\t\tfall(h+1, w+1, A, T);\r\n\t}\r\n\tstd::queue<PP> pq;\r\n\tpq.push({ SH+1,SW+1 });\r\n\tres[SH][SW] = 0;\r\n\twhile (!pq.empty()) {\r\n\t\tPP p = pq.front();\r\n\t\tpq.pop();\r\n\t\tfor (int i = 0; i<4; i++) {\r\n\t\t\tint rx = p.first + dx[i];\r\n\t\t\tint ry = p.second + dy[i];\r\n\t\t\tif (1 <= rx&&rx <= H && 1 <= ry&&ry <= W) {\r\n\t\t\t\tif (res[p.first][p.second] + 1<meteor[rx][ry]) {\r\n\t\t\t\t\tif (res[p.first][p.second] + 1<res[rx][ry]) {\r\n\t\t\t\t\t\tres[rx][ry] = res[p.first][p.second] + 1;\r\n\t\t\t\t\t\tpq.push({ rx,ry });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tstd::cout << (res[H][W] == 1 << 30 ? -1 : res[H][W]) << std::endl;\r\n\treturn 0;\r\n}\r\n", "problem_id": "68", "problem_title": "\u9695\u77f3", "datetime": "2018-08-06 16:01:32", "lang": "C++", "user": "weiwei12", "sample_io": ["Accepted"], "testcase": [{"result": "WrongAnswer", "max_score": "100", "io_result": ["WrongAnswer", "WrongAnswer", "WrongAnswer", "Accepted", "Accepted", "Accepted", "WrongAnswer", "Accepted", "Accepted", "WrongAnswer", "WrongAnswer"]}], "result": "WrongAnswer", "score": "0", "max_score": "100"}