{"submission_id": "426", "source": "# include <iostream>\r\n# include <algorithm>\r\n# include <vector>\r\n# include <string>\r\n# include <set>\r\n# include <map>\r\n# include <cmath>\r\n# include <iomanip>\r\n# include <functional>\r\n# include <utility>\r\n# include <stack>\r\n# include <queue>\r\n# include <list>\r\n# include <bitset>\r\n# include <complex>\r\n#include<limits.h>\r\n#include<unordered_map>\r\n#include<unordered_set>\r\n#include<deque>\r\n#include<cstdio>\r\nusing namespace std;\r\ntypedef long long int ll;\r\nconst int N = 1000000;\r\nconst int mod = 1000000007;\r\nconst ll INF = 9e18;\r\nint dx[4] = { 0,1,0,-1 }, dy[4] = { 1,0,-1,0 };\r\n#define rep(i,n) for(ll i=(ll)0;i<(ll)n;++i)\r\n#define rrep(i,n) for(ll i=(ll)n-1;i>=0;--i)\r\n#define vin(v,n) rep(i,n)cin>>v[i];\r\n#define ALL(x) x.begin(),x.end()\r\n#define pp pair<ll,ll>\r\n#define pps pair<ll,string>\r\n#define vll vector<ll>\r\n#define fi first\r\n#define se second\r\n#define pb push_back\r\n#define prqueue priority_queue<ll,vector<ll>,greater<ll>>\r\n#define print(s) cout<<s<<endl;\r\n#define inp(s) cin>>s;\r\nstring YN(bool b) { return(b ? \"YES\" : \"NO\"); }\r\nstring yn(bool b) { return(b ? \"Yes\" : \"No\"); }\r\nll n, m, ans, d[100010], v[100010],dp[1010][1010];\r\nint main() {\r\n\trep(i, 1010)rep(j, 1010)dp[i][j] = INF;\r\n\tcin >> n >> m;\r\n\trep(i, n)cin >> d[i];\r\n\trep(i, m)cin >> v[i];\r\n\trep(i, m) {\r\n\t\trep(j, n) {\r\n\t\t\tif (j > i)continue;\r\n\t\t\tif (i == 0)dp[i][j] = d[j] * v[i];\r\n\t\t\telse {\r\n\t\t\t\tif (j>0)dp[i][j] = min(dp[i - 1][j], dp[i - 1][j - 1]+d[j]*v[i]);\r\n\t\t\t\telse dp[i][j] = min(dp[i - 1][j], d[j] * v[i]);\r\n\t\t\t}\r\n\t\t\t//cout <<i<<\" \"<<j<<\" \"<< dp[i][j] << endl;\r\n\t\t}\r\n\t}\r\n\tcout << dp[m - 1][n - 1] << endl;\r\n}", "problem_id": "43", "problem_title": "\u30b7\u30eb\u30af\u30ed\u30fc\u30c9 (Silk Road)", "datetime": "2018-07-31 13:56:58", "lang": "C++", "user": "mukadenodaiou", "sample_io": ["Accepted", "Accepted"], "testcase": [{"result": "Accepted", "max_score": "20", "io_result": ["Accepted"]}, {"result": "Accepted", "max_score": "20", "io_result": ["Accepted"]}, {"result": "Accepted", "max_score": "20", "io_result": ["Accepted"]}, {"result": "Accepted", "max_score": "20", "io_result": ["Accepted"]}, {"result": "Accepted", "max_score": "20", "io_result": ["Accepted"]}], "result": "Accepted", "score": "100", "max_score": "100"}