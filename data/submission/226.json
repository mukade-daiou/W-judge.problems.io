{"submission_id": "226", "source": "#include <iostream>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <map>\r\n#include <vector>\r\n#include <queue>\r\n#include <functional>\r\n#include <string>\r\n#include <stack>\r\n#include <set>\r\n#include <sstream>\r\n#include <iomanip>\r\n#include <limits>\r\n#include <cstring>\r\n\r\nusing namespace std;\r\nusing ll = long long;\r\ntypedef unsigned long long ull;\r\ntypedef pair<ll, ll> P;\r\ntypedef pair<double, double >pd;\r\ntypedef pair<string, string> sP;\r\ntypedef pair<ll, P> PP;\r\ntypedef pair<P, P> PPP;\r\n\r\nconst ll MOD = 1e9 + 7;\r\nconst ll MOD2 = 998244353;\r\nconst ll INF = 1 << 30;\r\nconst ll INF2 = 9e18;\r\nconst double INF3 = 9e14;\r\nconst double eps = 1e-10;\r\nconst double PI = 3.14159265358979323846;\r\nconst int dx[4] = { 1,0,-1,0 }, dy[4] = { 0,1,0,-1 };\r\nconst int tx[8] = { -1,0,1,-1,1,-1,0,1 }, ty[8] = { -1,-1,-1,0,0,1,1,1 };\r\n\r\n#define ALL(x) (x).begin(),(x).end()\r\n#define ALLR(x) (x).rbegin(),(x).rend()\r\n#define pb push_back\r\n#define eb emplace_back\r\n#define fr first\r\n#define sc second\r\n\r\nstruct Starry_Sky_tree {\r\nprivate:\r\n\tvector<ll>segMax;\r\n\tvector<ll>segAdd;\r\n\tll N;\r\npublic:\r\n\tStarry_Sky_tree(vector<ll>v) {\r\n\t\tll sz = v.size();\r\n\t\tN = 1;while (N < sz)N *= 2;\r\n\t\tsegMax.resize(2 * N - 1, 0);\r\n\t\tsegAdd.resize(2 * N - 1, 0);\r\n\t}\r\n\r\n\t//\u533a\u9593[a, b)\u306b\u5024x\u3092\u52a0\u7b97\u3059\u308b.\r\n\tvoid add(int a, int b, int x, int k = 0, int l = 0, int r = -1)\r\n\t{\r\n\t\tif (r < 0)r = N;\r\n\t\tif (r <= a || b <= l) return; //\u3082\u3057\u4ea4\u5dee\u3057\u306a\u3044\u533a\u9593\u3067\u3042\u308c\u3070\u7d42\u3048\u308b.\r\n\r\n\t\tif (a <= l && r <= b) { //\u3082\u3057\u4eca\u307f\u3066\u3044\u308b\u533a\u9593[l, r)\u304c[a, b)\u306b\u5b8c\u5168\u306b\u5185\u5305\u3055\u308c\u3066\u3044\u308c\u3070\r\n\t\t\tsegAdd[k] += x;  //\u533a\u9593[l, r)\u306bk\u3092\u52a0\u7b97\u3059\u308b.\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tadd(a, b, x, k * 2 + 1, l, (l + r) / 2); //\u5b50\u306e\u533a\u9593\u306b(\u5fc5\u8981\u304c\u3042\u308c\u3070)x\u3092\u52a0\u7b97\u3059\u308b.\r\n\t\tadd(a, b, x, k * 2 + 2, (l + r) / 2, r); //\u3003\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t //\u89aa\u306e\u533a\u9593\u306e\u6700\u5c0f\u5024\u306f, \u5b50\u306e\u533a\u9593\u306e\u6700\u5c0f\u5024 + \u81ea\u5206\u306b\u4e00\u69d8\u306b\u52a0\u7b97\u3055\u308c\u3066\u3044\u308b\u5024 \u3067\u3042\u308b.\u4e00\u69d8\u306b\u52a0\u7b97\u3055\u308c\u308b\u5024\u306f\u66f4\u65b0\u3057\u306a\u304f\u3066\u826f\u3044.\r\n\t\tsegMax[k] = max(segMax[k * 2 + 1] + segAdd[k * 2 + 1], segMax[k * 2 + 2] + segAdd[k * 2 + 2]);\r\n\t}\r\n\r\n\tll getmax(int a, int b, int k = 0, int l = 0, int r = -1)\r\n\t{\r\n\t\tif (r < 0)r = N;\r\n\t\tif (r <= a || b <= l) return -1;\r\n\r\n\t\tif (a <= l && r <= b) return segMax[k] + segAdd[k]; //\u5b8c\u5168\u306b\u5185\u5305\u3055\u308c\u3066\u3044\u308c\u3070,\u305d\u306e\u533a\u9593\u306e\u6700\u5c0f\u5024\u3092\u8fd4\u3059.\r\n\r\n\t\tll left = getmax(a, b, k * 2 + 1, l, (l + r) / 2); //\u5b50\u306e\u533a\u9593\u306e\u6700\u5c0f\u5024\u3092\u6c42\u3081\u308b.\r\n\t\tll right = getmax(a, b, k * 2 + 2, (l + r) / 2, r); //\u5b50\u306e\u533a\u9593\u306e\u6700\u5c0f\u5024\u3092\u6c42\u3081\u308b\r\n\r\n\t\treturn max(left, right) + segAdd[k]; //\u89aa\u306e\u533a\u9593\u306e\u6700\u5c0f\u5024\u306f, \u5b50\u306e\u533a\u9593\u306e\u6700\u5c0f\u5024 + \u81ea\u5206\u306b\u4e00\u69d8\u306b\u52a0\u7b97\u3055\u308c\u3066\u3044\u308b\u5024 \u3067\u3042\u308b (\u5927\u5207\u306a\u306e\u30672\u56de\u66f8\u304d\u307e\u3057\u305f!!)\r\n\r\n\t}\r\n};\r\n\r\nint main() {\r\n\tll n, m, a, b;\r\n\tcin >> n >> m;\r\n\tif (n == 0) {\r\n\t\tcout << \"pcp\" << endl;\r\n\t\treturn 0;\r\n\t}\r\n\tvector<ll>v;\r\n\tv.resize(m, 0);\r\n\tStarry_Sky_tree seg(v);\r\n\tfor (int i = 0;i < n;i++) {\r\n\t\tcin >> a >> b;\r\n\t\tseg.add(a, a + b + 1, 1);\r\n\t}\r\n\tif (seg.getmax(1, m + 1) >= 2)cout << \"pcp\" << endl;\r\n\telse cout << \"notpcp\" << endl;\r\n\treturn 0;\r\n}\r\n", "problem_id": "26", "problem_title": "\u30e2\u30c6\u671f", "datetime": "2018-07-27 14:31:31", "lang": "C++", "user": "kaneshun", "sample_io": ["Accepted", "Accepted", "Accepted"], "testcase": [{"result": "Accepted", "max_score": "100", "io_result": ["Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted"]}], "result": "Accepted", "score": "100", "max_score": "100"}