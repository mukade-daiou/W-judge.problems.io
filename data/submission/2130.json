{"submission_id": "2130", "source": "#include \"bits/stdc++.h\"\r\n\r\nusing namespace std;\r\nusing ll = long long;\r\nusing ull = unsigned long long;\r\n\r\ntypedef pair<int, int>pi;\r\ntypedef pair<ll, ll> P;\r\ntypedef pair<ll, P> PP;\r\ntypedef pair<P, P> PPP;\r\n\r\nconst ll MOD = 1e9 + 7;\r\nconst ll INF = 9e18;\r\nconst double DINF = 5e14;\r\nconst double eps = 1e-10;\r\nconst int di[4] = { 1,0,-1,0 }, dj[4] = { 0,1,0,-1 };\r\n\r\n#define ALL(x) (x).begin(),(x).end()\r\n#define ALLR(x) (x).rbegin(),(x).rend()\r\n#define pb push_back\r\n#define eb emplace_back\r\n#define fr first\r\n#define sc second\r\n\r\n\r\nstruct Starry_Sky_tree {\r\nprivate:\r\n\tvector<ll>segMin;\r\n\tvector<ll>segAdd;\r\n\tll N;\r\npublic:\r\n\tStarry_Sky_tree(vector<ll>v) {\r\n\t\tll sz = v.size();\r\n\t\tN = 1;while (N < sz)N *= 2;\r\n\t\tsegMin.resize(2 * N - 1, 0);\r\n\t\tsegAdd.resize(2 * N - 1, 0);\r\n\t}\r\n\tvoid add(int a, int b, int x, int k = 0, int l = 0, int r = -1){\r\n\t\tif (r < 0)r = N;\r\n\t\tif (r <= a || b <= l) return;\r\n\t\tif (a <= l && r <= b) {\t\t\t\r\n\t\t\tsegAdd[k] += x; \r\n\t\t\treturn;\r\n\t\t}\r\n\t\tadd(a, b, x, k * 2 + 1, l, (l + r) / 2); \r\n\t\tadd(a, b, x, k * 2 + 2, (l + r) / 2, r); \r\n\t\tsegMin[k] = min(segMin[k * 2 + 1] + segAdd[k * 2 + 1], segMin[k * 2 + 2] + segAdd[k * 2 + 2]);\r\n\t}\r\n\r\n\tll getMin(int a, int b, int k = 0, int l = 0, int r = -1){\r\n\t\tif (r < 0)r = N;\r\n\t\tif (r <= a || b <= l) return INF;\r\n\t\tif (a <= l && r <= b) return segMin[k] + segAdd[k];\r\n\t\tll left = getMin(a, b, k * 2 + 1, l, (l + r) / 2);\r\n\t\tll right = getMin(a, b, k * 2 + 2, (l + r) / 2, r);\r\n\t\treturn min(left, right) + segAdd[k]; \r\n\t}\r\n};\r\n\r\nll n, b[100010], c[100010], x[100010], sum;\r\nint a[100010], q;\r\nvector<ll>v, ans;\r\n\r\nint main() {\r\n\tcin >> n >> q;\r\n\tfor (int i = 0;i < q;i++) {\r\n\t\tcin >> a[i];\r\n\t\tif (a[i]) {\r\n\t\t\tcin >> b[i];\r\n\t\t\tv.eb(b[i]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcin >> b[i] >> c[i] >> x[i];\r\n\t\t\tv.eb(b[i]);\r\n\t\t\tv.eb(c[i]);\r\n\t\t}\r\n\t}\r\n\tsort(ALL(v));\r\n\tv.erase(unique(ALL(v)), v.end());\r\n\tans.resize(300010);\r\n\tStarry_Sky_tree seg(ans);\r\n\tfor (int i = 0;i < q;i++) {\r\n\t\tif (!a[i]) {\r\n\t\t\tint it = lower_bound(ALL(v), b[i]) - v.begin();\r\n\t\t\tint it2 = upper_bound(ALL(v), c[i]) - v.begin();\r\n\t\t\tseg.add(it, it2, x[i]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcout << seg.getMin(lower_bound(ALL(v), b[i]) - v.begin(), upper_bound(ALL(v), b[i]) - v.begin()) << endl;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "problem_id": "114", "problem_title": "(500)Range Add Query", "datetime": "2018-08-25 11:59:20", "lang": "C++", "user": "Teacher", "sample_io": ["Accepted"], "testcase": [{"result": "Accepted", "max_score": "0", "io_result": ["Accepted"]}, {"result": "Accepted", "max_score": "500", "io_result": ["Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted"]}], "result": "Accepted", "score": "500", "max_score": "500"}