{"submission_id": "982", "source": "# include <iostream>\r\n# include <algorithm>\r\n# include <vector>\r\n# include <string>\r\n# include <set>\r\n# include <map>\r\n# include <cmath>\r\n# include <iomanip>\r\n# include <functional>\r\n# include <utility>\r\n# include <stack>\r\n# include <queue>\r\n# include <list>\r\n# include <bitset>\r\n# include <complex>\r\n#include<limits.h>\r\n#include<random>\r\n#include<deque>\r\n#include<cstdio>\r\n#include<fstream>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\nconst int N = 2000100;\r\nconst int mod = (int)pow(10, 9) + 7;\r\nconst ll INF = 1LL << 60;\r\n#define rep(i,n) for(ll i=(ll)0;i<(ll)n;++i)\r\n#define ALL(x) x.begin(),x.end()\r\n#define pp pair<ll,ll>\r\n#define ppp pair<ll,pp>\r\n#define fi first\r\n#define se second\r\n#define pb push_back\r\n#define fix(n) fixed<<setprecision(n)\r\n#define itr vector<ll>::iterator\r\n#define print(s) cout<<s<<endl\r\n#define inp(s) cin>>s\r\nll f(char c, ll n) {\r\n\tchar a = (c - 'a' + n +26) % 26 + 'a';\r\n\treturn a;\r\n}\r\nll n;\r\nint main() {\r\n\tstring s, ans = \"caesar\";\r\n\tstd::getline(cin, s);\r\n\trep(i, s.size() - 5) {\r\n\t\tif (s[i] >= 'a'&&s[i] <= 'z') {\r\n\t\t\tll now = (s[i] - 'a' - 2 + 26) % 26;\r\n\t\t\t//cout << i << \" \" << now << endl;\r\n\t\t\tll p = i+1,ct=1;\r\n\t\t\tbool fl = 1;\r\n\t\t\twhile (1) {\r\n\t\t\t\tif (p > s.size() - 1) { fl = 0; break; }\r\n\t\t\t\tif (s[p]<'a' || s[p]>'z')++p;\r\n\t\t\t\telse if (f(s[p], -now) != ans[ct]) { fl = 0; break; }\r\n\t\t\t\telse ++ct;\r\n\t\t\t\tif (ct == 5)break;\r\n\t\t\t\t++p;\r\n\t\t\t}\r\n\t\t\tif (ct == 5) { n = now; break; }\r\n\t\t}\r\n\t}\r\n\trep(i, s.size())if(s[i]>='a'&&s[i]<='z')s[i] = f(s[i], -n);\r\n\tcout << s << endl;\r\n\treturn 0;\r\n}", "problem_id": "57", "problem_title": "\u30b7\u30fc\u30b6\u30fc\u6697\u53f7", "datetime": "2018-08-06 15:46:44", "lang": "C++", "user": "mukadenodaiou", "sample_io": ["Accepted"], "testcase": [{"result": "Accepted", "max_score": "100", "io_result": ["Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted"]}], "result": "Accepted", "score": "100", "max_score": "100"}