{"submission_id": "505", "source": "#include <iostream>\r\n#include <string>\r\n#include <vector>\r\n#include <sstream>\r\n#include <algorithm>\r\n\r\nstd::vector<std::string> solve(){\r\n\r\n    std::vector<std::string> vec;\r\n\r\n    std::string in;\r\n\r\n    std::getline(std::cin,in);\r\n\r\n    std::stringstream ss(in);\r\n\r\n    std::string tmp;\r\n\r\n    while(!ss.eof()){\r\n        ss>>tmp;\r\n        vec.emplace_back(tmp);\r\n    }\r\n\r\n    return vec;\r\n}\r\n\r\nint main() {\r\n\r\n    std::vector<std::string> sites=solve();\r\n    std::vector<std::string> vec;\r\n    std::string text;\r\n    std::getline(std::cin,text);\r\n\r\n    std::sort(sites.begin(),sites.end());\r\n    sites.erase(std::unique(sites.begin(),sites.end()),sites.end());\r\n\r\n    for(auto&& x : sites){\r\n        auto res = text.find(x);\r\n        if(res!=std::string::npos)\r\n            vec.emplace_back(x);\r\n    }\r\n\r\n    if(vec.empty()){\r\n        std::cout<<\"Not Included!\"<<std::endl;\r\n        return 0;\r\n    }\r\n\r\n    for(auto&& x : vec)\r\n        std::cout<<x<<std::endl;\r\n\r\n    return 0;\r\n}", "problem_id": "51", "problem_title": "HOGE\u3061\u3083\u3093\u306e\u4fee\u5b66\u65c5\u884c\u7de8", "datetime": "2018-08-03 11:45:45", "lang": "C++", "user": "ikasmith", "sample_io": ["Accepted", "Accepted"], "testcase": [{"result": "WrongAnswer", "max_score": "100", "io_result": ["WrongAnswer", "WrongAnswer", "WrongAnswer", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted"]}], "result": "WrongAnswer", "score": "0", "max_score": "100"}