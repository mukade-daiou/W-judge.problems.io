{"submission_id": "305", "source": "#include <cstdio>\r\n#include <algorithm>\r\n#include <set>\r\nusing namespace std;\r\n\r\ntypedef long long Int;\r\n\r\nconst int LIM_N = 30;\r\nconst int LIM_HALF = 15000000;\t//\t>= 3^15\r\n\r\nint N;\r\nInt D;\r\nInt X[LIM_N + 10], Y[LIM_N + 10];\r\n\r\nint psLen[2];\r\npair<Int,Int> ps[2][LIM_HALF + 10];\r\n\r\nvoid dfs(int idx, int end, int i, Int x, Int y) {\r\n\tif (i == end) {\r\n\t\tps[idx][psLen[idx]++] = make_pair(x, y);\r\n\t\treturn;\r\n\t}\r\n\tdfs(idx, end, i + 1, x + X[i], y + Y[i]);\r\n\tdfs(idx, end, i + 1, x - X[i], y - Y[i]);\r\n\tdfs(idx, end, i + 1, x       , y       );\r\n}\r\n\r\nint main() {\r\n\tscanf(\"%d%lld\", &N, &D);\r\n\tfor (int i = 0; i < N; ++i) {\r\n\t\tscanf(\"%lld%lld\", &X[i], &Y[i]);\r\n\t}\r\n\t\r\n\tdfs(0, N / 2, 0, 0, 0);\r\n\tdfs(1, N, N / 2, 0, 0);\r\n\tsort(ps[0], ps[0] + psLen[0]);\r\n\tsort(ps[1], ps[1] + psLen[1]);\r\n\t\r\n\tInt ans = 0;\r\n\tmultiset<Int> ys;\r\n\tfor (int j = 0, ka = 0, kb = 0; j < psLen[0]; ++j) {\r\n\t\tfor (; kb < psLen[1] && ps[1][kb].first <= ps[0][j].first + D; ++kb) {\r\n\t\t\tys.insert(ps[1][kb].second);\r\n\t\t}\r\n\t\tfor (; ka < psLen[1] && ps[1][ka].first <  ps[0][j].first - D; ++ka) {\r\n\t\t\tys.erase(ys.find(ps[1][ka].second));\r\n\t\t}\r\n\t\tif (!ys.empty()) {\r\n\t\t\tconst Int tmp = ps[0][j].second - *ys.begin();\r\n\t\t\tif (ans < tmp) {\r\n\t\t\t\tans = tmp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprintf(\"%lld\\r\\n\", ans);\r\n\t\r\n\treturn 0;\r\n}\r\n", "problem_id": "48", "problem_title": "\u8ca1\u5b9d (Treasures)", "datetime": "2018-07-30 22:38:22", "lang": "C++", "user": "taiki_okano", "sample_io": ["Accepted", "Accepted"], "testcase": [{"result": "Accepted", "max_score": "20", "io_result": ["Accepted"]}, {"result": "TimeLimitExceeded", "max_score": "20", "io_result": ["TimeLimitExceeded"]}, {"result": "TimeLimitExceeded", "max_score": "20", "io_result": ["TimeLimitExceeded"]}, {"result": "TimeLimitExceeded", "max_score": "20", "io_result": ["TimeLimitExceeded"]}, {"result": "TimeLimitExceeded", "max_score": "20", "io_result": ["TimeLimitExceeded"]}], "result": "TimeLimitExceeded", "score": "20", "max_score": "100"}