{"submission_id": "191", "source": "#include <iostream>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <map>\r\n#include <vector>\r\n#include <queue>\r\n#include <functional>\r\n#include <string>\r\n#include <stack>\r\n#include <set>\r\n#include <sstream>\r\n#include <iomanip>\r\n#include <limits>\r\n#include <cstring>\r\n\r\nusing namespace std;\r\nusing ll = long long;\r\ntypedef unsigned long long ull;\r\ntypedef pair<ll, ll> P;\r\ntypedef pair<string, string> sP;\r\ntypedef pair<ll, pair<ll, ll>> PP;\r\n\r\nconst ll mod = 1e4;\r\nconst ll MOD = 1e9 + 7;\r\nconst ll MOD2 = 998244353;\r\nconst ll INF = 1 << 30;\r\nconst ll INF2 = 9e18;\r\nconst double INF3 = 9e14;\r\nconst int dx[4] = { 1,0,-1,0 }, dy[4] = { 0,1,0,-1 };\r\nconst int tx[8] = { -1,0,1,-1,1,-1,0,1 }, ty[8] = { -1,-1,-1,0,0,1,1,1 };\r\n#define ALL(x) (x).begin(),(x).end()\r\n#define ALLR(x) (x).rbegin(),(x).rend()\r\n#define pb push_back\r\n#define eb emplace_back\r\n#define fr first\r\n#define sc second\r\n\r\nint ff[26], bb[26], only[26];\r\n\r\nint main() {\r\n\tint n;\r\n\tstring s;\r\n\tcin >> n;\r\n\tfor (int i = 0;i < n;i++) {\r\n\t\tcin >> s;\r\n\t\tif (s.size() == 1) {\r\n\t\t\tonly[s[0] - 'a']++;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tff[s[0] - 'a']++;\r\n\t\t\tbb[s[s.size() - 1] - 'a']++;\r\n\t\t}\r\n\t}\r\n\tfor (int i = 0;i < 26;i++) {\r\n\t\tif (ff[i] != bb[i]) {\r\n\t\t\tif (only[i] - abs(ff[i] - bb[i]) > 0) {\r\n\t\t\t\tif ((only[i] - abs(ff[i] - bb[i])) % 2 == 1) {\r\n\t\t\t\t\tcout << \"No\" << endl;\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t\tcout << \"No\" << endl;\r\n\t\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (only[i] % 2 == 1) {\r\n\t\t\t\tcout << \"No\" << endl;\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcout << \"Yes\" << endl;\r\n\treturn 0;\r\n}", "problem_id": "22", "problem_title": "\u5faa\u74b0\u3057\u308a\u3068\u308a", "datetime": "2018-07-20 02:04:02", "lang": "C++", "user": "kaneshun", "sample_io": ["Accepted", "Accepted", "Accepted"], "testcase": [{"result": "WrongAnswer", "max_score": "100", "io_result": ["Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "WrongAnswer", "WrongAnswer", "WrongAnswer"]}], "result": "WrongAnswer", "score": "0", "max_score": "100"}