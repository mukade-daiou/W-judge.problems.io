{"submission_id": "89", "source": "# include <iostream>\r\n# include <algorithm>\r\n# include <vector>\r\n# include <string>\r\n# include <set>\r\n# include <map>\r\n# include <cmath>\r\n# include <iomanip>\r\n# include <functional>\r\n# include <utility>\r\n# include <stack>\r\n# include <queue>\r\n# include <list>\r\n# include <tuple>\r\n# include <unordered_map>\r\n# include <numeric>\r\n# include <complex>\r\n# include <bitset>\r\n# include <random>\r\n# include <chrono>\r\nusing namespace std;\r\nusing LL = long long;\r\nusing ULL = unsigned long long;\r\nconstexpr int INF = 2147483647;\r\nconstexpr int HINF = INF / 2;\r\nconstexpr double DINF = 100000000000000000.0;\r\nconstexpr double HDINF = 50000000000000000.0;\r\nconstexpr long long LINF = 9223372036854775807;\r\nconstexpr long long HLINF = 4500000000000000000;\r\nconst double PI = acos(-1);\r\nint dx[4] = { 0,1,0,-1 }, dy[4] = { 1,0,-1,0 };\r\ntemplate <typename T_char>T_char TL(T_char cX) { return tolower(cX); };\r\ntemplate <typename T_char>T_char TU(T_char cX) { return toupper(cX); };\r\n# define ALL(x)      (x).begin(),(x).end()\r\n# define UNIQ(c)     (c).erase(unique(ALL((c))),(c).end())\r\n# define LOWER(s)    transform(ALL((s)),(s).begin(),TL<char>)\r\n# define UPPER(s)    transform(ALL((s)),(s).begin(),TU<char>)\r\n# define mp          make_pair\r\n# define eb          emplace_back\r\n# define FOR(i,a,b)  for(LL i=(a);i<(b);i++)\r\n# define RFOR(i,a,b) for(LL i=(a);i>=(b);i--)\r\n# define REP(i,n)    FOR(i,0,n)\r\n# define INIT        std::ios::sync_with_stdio(false);std::cin.tie(0)\r\n\r\nint n, c, v;\r\nint s[101010], t[101010], y[101010], m[101010];\r\n\r\nstruct edge { LL to, cost, pay; };\r\n\r\ntypedef pair<LL, pair<int, int>> P;\r\n\r\nLL d[1515][330]; //\u8ddd\u96e2\r\nvector<edge> vec[100100];\r\n\r\nvoid dijkstra() {\r\n\tfor (int i = 0; i < 1515; i++)REP(j, 330)d[i][j] = HLINF;\r\n\tpriority_queue<P, std::vector<P>, std::greater<P>> pq;\r\n\td[1][0] = 0;\r\n\tpq.push(make_pair(d[1][0], mp(1, 0)));//cost,to\r\n\twhile (!pq.empty()) {\r\n\t\tP p = pq.top();\r\n\t\tpq.pop();\r\n\t\tint i = p.second.first;\r\n\t\tint j = p.second.second;\r\n\t\tfor (int k = 0; k < vec[i].size(); k++) {\r\n\t\t\tedge e = vec[i][k];\r\n\t\t\tif (j + e.pay > c)continue;\r\n\t\t\tif (d[e.to][j + e.pay] <= d[i][j] + e.cost)continue;\r\n\t\t\td[e.to][j + e.pay] = d[i][j] + e.cost;\r\n\t\t\tpq.push(make_pair(d[e.to][j + e.pay], mp(e.to, j + e.pay)));\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nint main() {\r\n\tcin >> n >> c >> v;\r\n\tREP(i, v) {\r\n\t\tcin >> s[i];\r\n\t}\r\n\tREP(i, v) {\r\n\t\tcin >> t[i];\r\n\t}\r\n\tREP(i, v) {\r\n\t\tcin >> y[i];\r\n\t}\r\n\tREP(i, v) {\r\n\t\tcin >> m[i];\r\n\t}\r\n\tREP(i, v) {\r\n\t\tvec[s[i]].emplace_back(edge{ t[i],m[i],y[i] });\r\n\t\t//vec[t[i]].emplace_back(edge{ s[i],m[i],y[i] });\r\n\t}\r\n\tdijkstra();\r\n\tLL ans = HLINF;\r\n\tfor(int i = c; i >= 0; i--) {\r\n\t\tans = min(ans, d[n][i]);\r\n\t}\r\n\tcout << (ans == HLINF ? -1 : ans) << endl;\r\n\t//system(\"pause\");\r\n}", "problem_id": "2", "problem_title": "yukicoder No.1 \u9053\u306e\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8", "datetime": "2018-07-15 11:41:21", "lang": "C++", "user": "tancahn2380", "sample_io": ["Accepted", "Accepted", "Accepted"], "testcase": [{"result": "Accepted", "max_score": "100", "io_result": ["Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted", "Accepted"]}], "result": "Accepted", "score": "100", "max_score": "100"}