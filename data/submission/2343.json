{"submission_id": "2343", "source": "#include \"bits/stdc++.h\"\r\n\r\nusing namespace std;\r\nusing ll = long long;\r\nusing ull = unsigned long long;\r\n\r\ntypedef pair<int, int>pi;\r\ntypedef pair<ll, ll> P;\r\ntypedef pair<ll, P> PP;\r\ntypedef pair<P, P> PPP;\r\n\r\nconst ll MOD = 1e9 + 7;\r\nconst ll INF = 9e18;\r\nconst double DINF = 5e14;\r\nconst double eps = 1e-10;\r\nconst int di[4] = { 1,0,-1,0 }, dj[4] = { 0,1,0,-1 };\r\n\r\n#define ALL(x) (x).begin(),(x).end()\r\n#define ALLR(x) (x).rbegin(),(x).rend()\r\n#define pb push_back\r\n#define eb emplace_back\r\n#define fr first\r\n#define sc second\r\n\r\n\r\nstruct BIT {\r\nprivate:\r\n\tint n;\r\n\tvector<ll>bit;\r\npublic:\r\n\tBIT(int sz) {\r\n\t\tn = sz;\r\n\t\tbit.resize(sz, 0);\r\n\t}\r\n\tvoid add(int a, ll val) {\r\n\t\tfor (int x = a;x < n;x += x & -x)bit[x] += val;\r\n\t}\r\n\tll sum(int a) {\r\n\t\tll ret = 0;\r\n\t\tfor (int x = a; x > 0; x -= x & -x) ret += bit[x];\r\n\t\treturn ret;\r\n\t}\r\n};\r\n\r\nll q, k, x[200010];\r\nstring s[200010];\r\nvector<ll>v;\r\n\r\nint main() {\r\n\tcin >> q >> k;\r\n\tBIT Bit(2 * q + 1);\r\n\tfor (int i = 0;i < q;i++) {\r\n\t\tcin >> s[i] >> x[i];\r\n\t\tif (s[i] == \"arrive\")v.eb(-x[i]);\r\n\t}\r\n\tsort(ALL(v));\r\n\tv.erase(unique(ALL(v)), v.end());\r\n\tfor (int i = 0;i < q;i++) {\r\n\t\tif (s[i] == \"arrive\") {\r\n\t\t\tint it = lower_bound(ALL(v), -x[i]) - v.begin();\r\n\t\t\tBit.add(it + 1, 1);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tint l = 0, r = q + 1, mid;\r\n\t\t\twhile (r - l > 1) {\r\n\t\t\t\tmid = (r + l) / 2;\r\n\t\t\t\tif (Bit.sum(mid) < k)l = mid;\r\n\t\t\t\telse r = mid;\r\n\t\t\t}\r\n\t\t\tif (Bit.sum(r) < k)cout << \"kawanai!\" << endl;\r\n\t\t\telse {\r\n\t\t\t\tcout << -v[r - 1] << endl;\r\n\t\t\t\tBit.add(r, -1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "problem_id": "119", "problem_title": "(600)\u3078\u3073\u3084\u3055\u3093 hard", "datetime": "2018-08-28 14:48:00", "lang": "C++", "user": "kaneshun", "sample_io": ["Accepted"], "testcase": [{"result": "WrongAnswer", "max_score": "600", "io_result": ["WrongAnswer", "WrongAnswer", "WrongAnswer", "WrongAnswer"]}], "result": "WrongAnswer", "score": "0", "max_score": "600"}