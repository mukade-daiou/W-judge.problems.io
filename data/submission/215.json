{"submission_id": "215", "source": "#include<iostream>\r\nint main()\r\n{\r\n\tint A[2], B[2], C[2], D[2], AB[2], CD[2];\r\n\tfor (int i = 0; i <= 1; i++) {\r\n\t\tstd::cin >> A[i];\r\n\t}\r\n\tfor (int i = 0; i <= 1; i++) {\r\n\t\tstd::cin >> B[i];\r\n\t}\r\n\tfor (int i = 0; i <= 1; i++) {\r\n\t\tstd::cin >> C[i];\r\n\t}\r\n\tfor (int i = 0; i <= 1; i++) {\r\n\t\tstd::cin >> D[i];\r\n\t}\r\n\tfor (int i = 0; i <= 1; i++) {\r\n\t\tAB[i] = A[i] - B[i];\r\n\t\tCD[i] = C[i] - D[i];\r\n\t\t//AB[i]\u304c\u8ca0\u306e\u6570\u3060\u3063\u305f\u6642\u306e\u5bfe\u5fdc\r\n\t\tif (AB[i] < 0) {\r\n\t\t\tAB[i] = B[i] - A[i];\r\n\t\t}\r\n\t\tif (CD[i] < 0) {\r\n\t\t\tCD[i] = D[i] - C[i];\r\n\t\t}\r\n\t}\r\n\tif (AB[1] == CD[1]) {\r\n\t\tif (AB[2] == CD[2]) {\r\n\t\t\tstd::cout << \"Parallel\" << std::endl;\r\n\t\t}\r\n\t\telse if (AB[2] % CD[2] == 0) {\r\n\t\t\tstd::cout << \"Parallel\" << std::endl;\r\n\t\t}\r\n\t\telse if (CD[2] % AB[2] == 0) {\r\n\t\t\tstd::cout << \"Parallel\" << std::endl;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstd::cout << \"Intersect\" << std::endl;\r\n\t\t}\r\n\t}\r\n\telse if (AB[1] % CD[1] == 0) {\r\n\t\tif (AB[2] == CD[2]) {\r\n\t\t\tstd::cout << \"Parallel\" << std::endl;\r\n\t\t}\r\n\t\telse if (AB[2] % CD[2] == 0) {\r\n\t\t\tstd::cout << \"Parallel\" << std::endl;\r\n\t\t}\r\n\t\telse if (CD[2] % AB[2] == 0) {\r\n\t\t\tstd::cout << \"Parallel\" << std::endl;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstd::cout << \"Intersect\" << std::endl;\r\n\t\t}\r\n\t}\r\n\telse if (CD[1] % AB[1] == 0) {\r\n\t\tif (AB[2] == CD[2]) {\r\n\t\t\tstd::cout << \"Parallel\" << std::endl;\r\n\t\t}\r\n\t\telse if (AB[2] % CD[2] == 0) {\r\n\t\t\tstd::cout << \"Parallel\" << std::endl;\r\n\t\t}\r\n\t\telse if (CD[2] % AB[2] == 0) {\r\n\t\t\tstd::cout << \"Parallel\" << std::endl;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstd::cout << \"Intersect\" << std::endl;\r\n\t\t}\r\n\t}\r\n}", "problem_id": "25", "problem_title": "+INTERSECT+", "datetime": "2018-07-27 07:41:30", "lang": "C++", "user": "yuuto", "sample_io": ["RuntimeError", "Accepted"], "result": "WrongAnswer", "testcase": [{"result": "Accepted", "max_score": "50", "io_result": ["Accepted"]}, {"result": "WrongAnswer", "max_score": "50", "io_result": ["WrongAnswer"]}], "score": "50", "max_score": "100"}